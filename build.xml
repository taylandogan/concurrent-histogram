<project name="CustomHistogram" default="dist" basedir=".">
    <description>
        Builds a Histogram concurrently.
    </description>

  <!-- set global properties for this build -->
  <property name="projectName" value="HistogramBuilder"/>
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="lib" location="lib"/>
  <property name="testreports"  location="testreports"/>

	<path id="test.classpath">
		<pathelement location="${lib}/junit.jar" />
		<pathelement location="${lib}/hamcrest.core_1.3.0" />
	</path>
			
	<path id="project.classpath">
	    <pathelement location="${build}" />
	</path>
	
  <target name="init">
    	<!-- Create the time stamp -->
   	 <tstamp/>
    	<!-- Create the build directory structure used by compile -->
    	<mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init" description="compile the source " >
    	<!-- Compile the java code from ${src} into ${build} -->
   	<javac includeantruntime="false" srcdir="${src}" destdir="${build}" classpathref="test.classpath" />
  </target>
	
  <target name="test" depends="compile" description="run the unit tests " >
  	<mkdir dir="${testreports}"/>
  	<junit printsummary="yes" haltonfailure="yes" >
      	<batchtest fork="yes" todir="${testreports}">
        	<fileset dir="${src/test}">
          		<include name="**/*Test*.java"/>
        	</fileset>
      	</batchtest>

      	<formatter type="xml" />	
		<classpath refid="project.classpath" />
		<classpath refid="test.classpath" />	
  	</junit>
  </target>

  <target name="dist" depends="compile"
  	description="generate the distribution" >

  	<!-- Create the distribution directory -->
    	<mkdir dir="${dist}"/>

  	<jar destfile="${projectName}.jar"
  	      basedir="${build}">

  	      <manifest>
  	         <attribute name="Main-Class" value="source.HistogramBuilder"/>
  	      </manifest>

  	   </jar>
  </target>

  <target name="clean"
    	description="clean up" >

    	<!-- Delete the ${build} and ${dist} directory trees -->
    	<delete dir="${build}"/>
    	<delete dir="${dist}"/>
  		<delete dir="${testreports}"/>
  </target>
</project>